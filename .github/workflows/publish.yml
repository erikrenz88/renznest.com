name: Render Quarto Site

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 6 * * *"  # Runs daily at 6 AM UTC
  workflow_dispatch:
    inputs:
      force_update:
        description: "Force gdown data download"
        required: false
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

concurrency:
  group: quarto-build
  cancel-in-progress: false  # Prevents GitHub from canceling due to new commits

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🚀 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔍 Retrieve Previously Built _site (if exists)
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: _site_previous
        continue-on-error: true  # Don't fail if no previous artifact exists

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Use specific Python version

      - name: Install gdown
        run: |
          python -m pip install --upgrade pip
          pip install gdown

      - name: 🛠 Ensure _site Exists
        run: mkdir -p _site

      - name: Check if index.qmd was updated or force update is enabled
        id: check-update
        run: |
          FORCE_UPDATE=${{ github.event.inputs.force_update || 'false' }}
          echo "Force update: $FORCE_UPDATE"

          if [[ "$FORCE_UPDATE" == "true" ]]; then
            echo "INDEX_UPDATED=true" >> $GITHUB_ENV
            echo "Manual run with force update enabled. Downloading data."
          elif git ls-files --error-unmatch "posts/250215-regulations/index.qmd" > /dev/null 2>&1 && \
               (git diff --name-only HEAD~2 HEAD | grep -q "posts/250215-regulations/index.qmd"); then
            echo "INDEX_UPDATED=true" >> $GITHUB_ENV
            echo "Detected change in index.qmd in the last 2 commits, will download data."
          else
            echo "INDEX_UPDATED=false" >> $GITHUB_ENV
            echo "No recent change in index.qmd, skipping data download."
          fi

      - name: Debug INDEX_UPDATED
        run: echo "INDEX_UPDATED is ${{ env.INDEX_UPDATED }}"

      - name: Download regulations data (if index.qmd changed or force update)
        if: env.INDEX_UPDATED == 'true'
        run: |
          echo "Downloading updated regulation data..."
          gdown --id 1Re-xRy9d3jZmWOVjvC4uwyi8UChxzUIY -O posts/250215-regulations/full_regulations.csv

      - name: 🔧 Install Quarto 1.6.42
        run: |
          wget -qO quarto.deb https://github.com/quarto-dev/quarto-cli/releases/download/v1.6.42/quarto-1.6.42-linux-amd64.deb
          sudo dpkg -i quarto.deb
          quarto check

      - name: 🔧 Install System Dependencies (for R packages)
        run: |
          sudo apt-get update
          sudo apt-get install -y libpng-dev libcurl4-openssl-dev libssl-dev libxml2-dev

      - name: 🔧 Install Python Dependencies
        run: |
          pip install -r requirements.txt
          pip install polars gdown requests pandas matplotlib seaborn jupyter-cache

      - name: 🔧 Set Up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.0'

      - name: 🔧 Install R Dependencies
        run: |
          Rscript -e '
            install.packages(c("pacman", "httr", "jsonlite", "readr", "dplyr", "lubridate", "tidyr", "knitr", "rmarkdown", "stringr", "reticulate"))
          '

      - name: 🏗 Build Quarto Website
        if: github.event_name == 'workflow_dispatch' || env.INDEX_UPDATED == 'true'
        uses: quarto-dev/quarto-actions/render@v2
        timeout-minutes: 30  # Ensures Quarto does not hang indefinitely

      - name: 🔀 Merge Old and New _site
        run: rsync -a _site_previous/ _site/ || true

      - name: 🚨 Check Build Success Before Upload
        run: |
          if [ ! -d "_site" ]; then
            echo "❌ ERROR: _site directory is missing! Skipping deployment."
            exit 1
          fi

      - name: 📤 Upload _site for Deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site/"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    permissions:
      pages: write
      id-token: write

    steps:
      - name: 🚀 Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
