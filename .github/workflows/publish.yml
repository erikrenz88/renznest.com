name: Publish Analysis

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CENSUS_API_KEY: ${{ secrets.CENSUS_API_KEY }} 

    steps:
      - name: 🚀 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 🔧 Set Up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.0'

      - name: 🧭 Install Google Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get update
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
          google-chrome-stable --version

      - name: 🔧 Set Environment for Chromote
        run: echo "CHROMOTE_CHROME=/usr/bin/google-chrome-stable" >> $GITHUB_ENV

      - name: 🔧 Install Python Dependencies
        run: |
          pip install -r requirements.txt
          pip install polars gdown requests pandas matplotlib seaborn jupyter-cache

      - name: 🔧 Install R Dependencies
        run: |
          Rscript -e 'install.packages(c("rmarkdown", "knitr", "pacman", "httr", "jsonlite", "readr", "dplyr", "lubridate", "tidyr", "xml2", "rvest", "chromote", "reactable", "htmltools", "scales", "reactablefmtr", "here"), repos = "https://cloud.r-project.org")'

      - name: 🔐 Set Census API Key in R Session
        run: |
          echo 'Sys.setenv(CENSUS_API_KEY = Sys.getenv("CENSUS_API_KEY"))' > .Rprofile
          cat .Rprofile  # Just to confirm

      - name: 🔧 Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libudunits2-dev \
            libgdal-dev \
            libgeos-dev \
            libproj-dev \
            libfontconfig1-dev \
            gdal-bin \
            gfortran

      - name: 🔧 Install Quarto 1.6+
        run: |
          wget -qO- https://quarto.org/download/latest/quarto-linux-amd64.deb > quarto.deb
          sudo dpkg -i quarto.deb
          quarto check

          - name: 🧠 Detect Changed Blog Posts
          id: changed-posts
          run: |
            git fetch origin main
        
            # Find changed blog folders under /posts/
            changed_dirs=$(git diff --name-only origin/main -- posts/ | grep -oE '^posts/[0-9]{6}[^/]+' | sort -u || true)
        
            echo "Changed blog post directories:"
            echo "$changed_dirs"
        
            if [[ -z "$changed_dirs" ]]; then
              echo "No blog posts changed."
              echo "RENDER=false" >> $GITHUB_ENV
            else
              echo "Rendering the following blog posts:" >> $GITHUB_STEP_SUMMARY
              echo "$changed_dirs" | tee changed_posts.txt >> $GITHUB_STEP_SUMMARY
              echo "RENDER=true" >> $GITHUB_ENV
            fi
        
      - name: 🏗 Conditionally Render Site
        if: env.RENDER == 'true'
        run: |
          # Render each changed blog post
          while read -r post; do
            echo "Rendering $post"
            quarto render "$post"
          done < changed_posts.txt
      
          # Always render top-level pages like index.qmd
          quarto render index.qmd
          quarto render about.qmd || true  # Optional: other shared pages

      - name: 📤 Publish to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site/"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    permissions:
      pages: write
      id-token: write

    steps:
      - name: 🚀 Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
